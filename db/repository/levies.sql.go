// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: levies.sql

package db

import (
	"context"
)

const createLevy = `-- name: CreateLevy :one
INSERT INTO levies (
    name,
    morale,
    encampment,
    swordmen,
    shield_bearers,
    archers,
    lancers,
    supply_troop,
    movement_speed,
    offensive_strength,
    defensive_strength,
    realm_member_id
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12
) RETURNING levy_id, name, morale, encampment, swordmen, shield_bearers, archers, lancers, supply_troop, movement_speed, offensive_strength, defensive_strength, realm_member_id, created_at
`

type CreateLevyParams struct {
	Name              string  `json:"name"`
	Morale            int16   `json:"morale"`
	Encampment        int32   `json:"encampment"`
	Swordmen          int32   `json:"swordmen"`
	ShieldBearers     int32   `json:"shield_bearers"`
	Archers           int32   `json:"archers"`
	Lancers           int32   `json:"lancers"`
	SupplyTroop       int32   `json:"supply_troop"`
	MovementSpeed     float64 `json:"movement_speed"`
	OffensiveStrength int32   `json:"offensive_strength"`
	DefensiveStrength int32   `json:"defensive_strength"`
	RealmMemberID     int64   `json:"realm_member_id"`
}

func (q *Queries) CreateLevy(ctx context.Context, arg *CreateLevyParams) (*Levy, error) {
	row := q.db.QueryRowContext(ctx, createLevy,
		arg.Name,
		arg.Morale,
		arg.Encampment,
		arg.Swordmen,
		arg.ShieldBearers,
		arg.Archers,
		arg.Lancers,
		arg.SupplyTroop,
		arg.MovementSpeed,
		arg.OffensiveStrength,
		arg.DefensiveStrength,
		arg.RealmMemberID,
	)
	var i Levy
	err := row.Scan(
		&i.LevyID,
		&i.Name,
		&i.Morale,
		&i.Encampment,
		&i.Swordmen,
		&i.ShieldBearers,
		&i.Archers,
		&i.Lancers,
		&i.SupplyTroop,
		&i.MovementSpeed,
		&i.OffensiveStrength,
		&i.DefensiveStrength,
		&i.RealmMemberID,
		&i.CreatedAt,
	)
	return &i, err
}
